name: üöÄ Deploy naar productie via rsync webhook

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Productie

    steps:
      - name: üîê Trigger rsync LIVE webhook
        id: trigger_live
        run: |
          echo "‚è≥ Start LIVE rsync webhook call..."
          RESPONSE=$(curl -s -X POST https://git.smarter.nl/webhook-rsync/webhooks/deploy.php \
            -H "Content-Type: application/json" \
            -H "X-Smarter-Secret: ${{ secrets.WEBHOOK_SECRET }}" \
            -d '{"ref": "refs/heads/main", "mode": "live"}')
          echo "$RESPONSE"
          echo "live_response=$RESPONSE" >> $GITHUB_OUTPUT

      - name: üß™ Trigger rsync DRY-RUN webhook
        id: trigger_dryrun
        run: |
          echo "üî¢ Start DRY-RUN rsync webhook call..."
          RESPONSE=$(curl -s -X POST https://git.smarter.nl/webhook-rsync/webhooks/deploy.php \
            -H "Content-Type: application/json" \
            -H "X-Smarter-Secret: ${{ secrets.WEBHOOK_SECRET }}" \
            -d '{"ref": "refs/heads/main", "mode": "dry-run"}')
          echo "$RESPONSE"
          echo "dryrun_response=$RESPONSE" >> $GITHUB_OUTPUT

      - name: üì§ Toon rsync responses (live + dry-run)
        run: |
          echo "---- RSYNC LIVE OUTPUT ----"
          RESPONSE="${{ steps.trigger_live.outputs.live_response }}"
          # Gebruik printf voor betere output-weergave
          printf "%s\n" "$RESPONSE"

          echo "---- RSYNC DRY-RUN OUTPUT ----"
          RESPONSE_DRY="${{ steps.trigger_dryrun.outputs.dryrun_response }}"
          printf "%s\n" "$RESPONSE_DRY"

      - name: üß† Analyseer output op errors
        run: |
          set -e
          ALL_RESPONSES="${{ steps.trigger_live.outputs.live_response }}${{ steps.trigger_dryrun.outputs.dryrun_response }}"
          echo "$ALL_RESPONSES"

          if echo "$ALL_RESPONSES" | grep -Ei "(Fatal error|Uncaught exception|syntax error)"; then
            echo "‚ùå Foutmelding gedetecteerd in webhook response"
            exit 1
          fi

      - name: üì• Download server log (deploy.log)
        run: |
          echo "‚¨áÔ∏è Downloaden van deploy.log..."
          curl -s https://git.smarter.nl/webhook-rsync/webhooks/deploy.log -o deploy.log
          echo "‚úÖ Logbestand gedownload. Inhoud:"
          cat deploy.log

      - name: üì¶ Upload logbestand als artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-rsync-log
          path: deploy.log